name: test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Install Yarn
        run: npm install -g yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Deps
        run: yarn install --pure-lockfile
      # - name: Build & Test
      #   run: yarn test
      - name: Ensure dist/ folder is up-to-date
        run: |
          yarn build
          if [ "$(git diff --ignore-space-at-eol | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build.  See status below:"
            git diff
            exit 1
          fi

  test-save:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate files in working directory
        shell: bash
        run: src/create-cache-files.sh ${{ runner.os }} test-cache
      - name: Generate files outside working directory
        shell: bash
        run: src/create-cache-files.sh ${{ runner.os }} ~/test-cache
      - name: Save cache
        uses: ./
        with:
          endpoint: ${{ secrets.ENDPOINT }}
          accessKey: ${{ secrets.ACCESS_KEY }}
          secretKey: ${{ secrets.SECRET_KEY }}
          bucket: ${{ secrets.BUCKET }}
          use-fallback: false
          key: test-${{ runner.os }}-${{ github.run_id }}
          path: |
            test-cache
            ~/test-cache

  test-restore:
    needs: test-save
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore cache
        uses: ./
        with:
          endpoint: ${{ secrets.ENDPOINT }}
          accessKey: ${{ secrets.ACCESS_KEY }}
          secretKey: ${{ secrets.SECRET_KEY }}
          bucket: ${{ secrets.BUCKET }}
          use-fallback: false
          key: test-${{ runner.os }}-${{ github.run_id }}
          path: |
            test-cache
            ~/test-cache
      - name: Verify cache files in working directory
        shell: bash
        run: src/verify-cache-files.sh ${{ runner.os }} test-cache
      - name: Verify cache files outside working directory
        shell: bash
        run: src/verify-cache-files.sh ${{ runner.os }} ~/test-cache

  test-restore-keys:
    needs: test-save
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore cache
        uses: ./
        with:
          endpoint: ${{ secrets.ENDPOINT }}
          accessKey: ${{ secrets.ACCESS_KEY }}
          secretKey: ${{ secrets.SECRET_KEY }}
          bucket: ${{ secrets.BUCKET }}
          use-fallback: false
          key: test-${{ runner.os }}-${{ github.run_id }}
          path: |
            test-cache
            ~/test-cache
          restore-keys: test-${{ runner.os }}-
      - name: Verify cache files in working directory
        shell: bash
        run: src/verify-cache-files.sh ${{ runner.os }} test-cache
      - name: Verify cache files outside working directory
        shell: bash
        run: src/verify-cache-files.sh ${{ runner.os }} ~/test-cache

  test-save-only:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate files in working directory
        shell: bash
        run: src/create-cache-files.sh ${{ runner.os }} test-cache
      - name: Generate files outside working directory
        shell: bash
        run: src/create-cache-files.sh ${{ runner.os }} ~/test-cache
      - name: Save cache
        uses: ./save/
        with:
          endpoint: ${{ secrets.ENDPOINT }}
          accessKey: ${{ secrets.ACCESS_KEY }}
          secretKey: ${{ secrets.SECRET_KEY }}
          bucket: ${{ secrets.BUCKET }}
          use-fallback: false
          key: test-save-only-${{ runner.os }}-${{ github.run_id }}
          path: |
            test-cache
            ~/test-cache

  test-restore-only:
    needs: test-save-only
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore cache
        uses: ./restore/
        with:
          endpoint: ${{ secrets.ENDPOINT }}
          accessKey: ${{ secrets.ACCESS_KEY }}
          secretKey: ${{ secrets.SECRET_KEY }}
          bucket: ${{ secrets.BUCKET }}
          use-fallback: false
          key: test-save-only-${{ runner.os }}-${{ github.run_id }}
          path: |
            test-cache
            ~/test-cache
      - name: Verify cache files in working directory
        shell: bash
        run: src/verify-cache-files.sh ${{ runner.os }} test-cache
      - name: Verify cache files outside working directory
        shell: bash
        run: src/verify-cache-files.sh ${{ runner.os }} ~/test-cache
